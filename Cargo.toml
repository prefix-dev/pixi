[workspace]
members = ["crates/*"]

[workspace.package]
authors = ["pixi contributors <hi@prefix.dev>"]
edition = "2021"
homepage = "https://github.com/prefix-dev/pixi"
license = "BSD-3-Clause"
readme = "README.md"
repository = "https://github.com/prefix-dev/pixi"

[workspace.dependencies]
ahash = "0.8.11"
assert_matches = "1.5.0"
async-once-cell = "0.5.3"
cfg-if = "1.0"
chrono = "0.4.38"
clap = { version = "4.5.9", default-features = false }
clap-verbosity-flag = "2.2.0"
clap_complete = "4.5.2"
clap_complete_nushell = "4.5.2"
concat-idents = "1.1.5"
console = "0.15.8"
crossbeam-channel = "0.5.12"
csv = "1.3.0"
deno_task_shell = "0.16.0"
dialoguer = "0.11.0"
dirs = "5.0.1"
distribution-filename = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
distribution-types = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
dunce = "1.0.4"
fd-lock = "4.0.2"
flate2 = "1.0.28"
fs_extra = "1.3.0"
futures = "0.3.30"
http-cache-reqwest = "0.14.0"
human_bytes = "0.4.3"
humantime = "2.1.0"
ignore = "0.4.22"
indexmap = "2.2.6"
indicatif = "0.17.8"
insta = "1.38.0"
install-wheel-rs = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
is_executable = "1.0.1"
itertools = "0.13.0"
lazy_static = "1.4.0"
libc = { version = "0.2.153", default-features = false }
miette = { version = "7.2.0", features = ["fancy"] }
minijinja = "2.1.1"
nix = { version = "0.29.0", default-features = false }
once_cell = "1.19.0"
parking_lot = "0.12.2"
pep440_rs = "0.6.0"
pep508_rs = "0.6.0"
percent-encoding = "2.3.1"
platform-tags = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
pypi-types = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
pyproject-toml = "0.11.0"
regex = "1.10.4"
requirements-txt = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
reqwest = { version = "0.12.4", default-features = false }
reqwest-middleware = "0.3.0"
reqwest-retry = "0.5.0"
rlimit = "0.10.1"
rstest = "0.19.0"
self-replace = "1.3.7"
serde = "1.0.198"
serde-untagged = "0.1.5"
serde_ignored = "0.1.10"
serde_json = "1.0.116"
serde_with = "3.7.0"
serde_yaml = "0.9.34"
serial_test = "3.0.0"
shlex = "1.3.0"
signal-hook = "0.3.17"
spdx = "0.10.4"
strsim = "0.11.1"
tabwriter = "1.4.0"
tar = "0.4.40"
tempfile = "3.10.1"
thiserror = "1.0.58"
tokio = "1.37.0"
tokio-util = "0.7.10"
toml_edit = "0.22.11"
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
typed-path = "0.9.1"

# Rattler crates
file_url = "0.1.4"
rattler = { version = "0.27.6", default-features = false }
rattler_cache = { version = "0.1.8", default-features = false }
rattler_conda_types = { version = "0.27.2", default-features = false }
rattler_digest = { version = "1.0.1", default-features = false }
rattler_lock = { version = "0.22.20", default-features = false }
rattler_networking = { version = "0.21.2", default-features = false }
rattler_repodata_gateway = { version = "0.21.8", default-features = false }
rattler_shell = { version = "0.21.6", default-features = false }
rattler_solve = { version = "1.0.3", default-features = false }
rattler_virtual_packages = { version = "1.0.4", default-features = false }

# Bumping this to a higher version breaks the Windows path handling.
url = "2.5.0"
uv-auth = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-cache = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-client = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-configuration = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-dispatch = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-distribution = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-git = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-installer = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-normalize = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-python = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-requirements = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-resolver = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
uv-types = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
winapi = { version = "0.3.9", default-features = false }
xxhash-rust = "0.8.10"
zip = { version = "0.6.6", default-features = false }

fancy_display = { path = "crates/fancy_display" }
pixi_config = { path = "crates/pixi_config" }
pixi_consts = { path = "crates/pixi_consts" }
pixi_default_versions = { path = "crates/pixi_default_versions" }
pixi_manifest = { path = "crates/pixi_manifest" }
pixi_progress = { path = "crates/pixi_progress" }
pixi_spec = { path = "crates/pixi_spec" }
pixi_utils = { path = "crates/pixi_utils", default-features = false }
pixi_uv_conversions = { path = "crates/pixi_uv_conversions" }
pypi_mapping = { path = "crates/pypi_mapping" }
pypi_modifiers = { path = "crates/pypi_modifiers" }


[package]
authors.workspace = true
description = "A package management and workflow tool"
edition.workspace = true
homepage.workspace = true
license.workspace = true
name = "pixi"
readme.workspace = true
repository.workspace = true
version = "0.28.0"

[features]
default = ["native-tls"]
native-tls = [
  "reqwest/native-tls",
  "reqwest/native-tls-alpn",
  "rattler_repodata_gateway/native-tls",
  "rattler/native-tls",
  "pixi_utils/native-tls",
]
rustls-tls = [
  "reqwest/rustls-tls",
  "reqwest/rustls-tls-native-roots",
  "rattler_repodata_gateway/rustls-tls",
  "rattler/rustls-tls",
  "pixi_utils/rustls-tls",
]
slow_integration_tests = []

[dependencies]
ahash = { workspace = true }
assert_matches = { workspace = true }
async-once-cell = { workspace = true }
barrier_cell = { path = "crates/barrier_cell" }
cfg-if = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = [
  "derive",
  "usage",
  "wrap_help",
  "std",
  "color",
  "error-context",
  "env",
] }
clap-verbosity-flag = { workspace = true }
clap_complete = { workspace = true }
clap_complete_nushell = { workspace = true }
console = { workspace = true, features = ["windows-console-colors"] }
crossbeam-channel = { workspace = true }
csv = { workspace = true }
deno_task_shell = { workspace = true }
dialoguer = { workspace = true }
dirs = { workspace = true }
distribution-filename = { workspace = true }
distribution-types = { workspace = true }
dunce = { workspace = true }
fancy_display = { workspace = true }
fd-lock = { workspace = true }
flate2 = { workspace = true }
fs_extra = { workspace = true }
futures = { workspace = true }
http-cache-reqwest = { workspace = true }
human_bytes = { workspace = true }
humantime = { workspace = true }
ignore = { workspace = true }
indexmap = { workspace = true, features = ["serde"] }
indicatif = { workspace = true }
install-wheel-rs = { workspace = true }
is_executable = { workspace = true }
itertools = { workspace = true }
lazy_static = { workspace = true }
miette = { workspace = true, features = [
  "fancy",
  "supports-color",
  "supports-hyperlinks",
  "supports-unicode",
  "terminal_size",
  "textwrap",
] }
minijinja = { workspace = true, features = ["builtins"] }
once_cell = { workspace = true }
parking_lot = { workspace = true }

pep440_rs = { workspace = true }
pep508_rs = { workspace = true }
percent-encoding = { workspace = true }
platform-tags = { workspace = true }
pypi-types = { workspace = true }
rattler = { workspace = true, features = ["cli-tools", "indicatif"] }
rattler_conda_types = { workspace = true }
rattler_digest = { workspace = true }
rattler_lock = { workspace = true }
rattler_networking = { workspace = true }
rattler_repodata_gateway = { workspace = true, features = [
  "sparse",
  "gateway",
] }
rattler_shell = { workspace = true, features = ["sysinfo"] }
rattler_solve = { workspace = true, features = ["resolvo", "serde"] }

pixi_config = { workspace = true, features = ["rattler_repodata_gateway"] }
pixi_consts = { workspace = true }
pixi_default_versions = { workspace = true }
pixi_manifest = { workspace = true }
pixi_progress = { workspace = true }
pixi_spec = { workspace = true }
pixi_utils = { workspace = true, default-features = false }
pixi_uv_conversions = { workspace = true }
pypi_mapping = { workspace = true }
pypi_modifiers = { workspace = true }
rattler_virtual_packages = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true, features = [
  "http2",
  "macos-system-configuration",
] }
reqwest-middleware = { workspace = true }
reqwest-retry = { workspace = true }
rlimit = { workspace = true }
self-replace = { workspace = true }
serde = { workspace = true }
serde_ignored = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true, features = ["indexmap"] }
serde_yaml = { workspace = true }
shlex = { workspace = true }
strsim = { workspace = true }
tabwriter = { workspace = true, features = ["ansi_formatting"] }
tar = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "signal"] }
tokio-util = { workspace = true }
toml_edit = { workspace = true, features = ["serde"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
url = { workspace = true }
uv-auth = { workspace = true }
uv-cache = { workspace = true }
uv-client = { workspace = true }
uv-configuration = { workspace = true }
uv-dispatch = { workspace = true }
uv-distribution = { workspace = true }
uv-git = { workspace = true }
uv-installer = { workspace = true }
uv-normalize = { workspace = true }
uv-python = { workspace = true }
uv-resolver = { workspace = true }
uv-types = { workspace = true }
xxhash-rust = { workspace = true }
zip = { workspace = true, features = ["deflate", "time"] }

[target.'cfg(unix)'.dependencies]
libc = { workspace = true, default-features = false }
nix = { workspace = true, features = ["fs", "signal", "term", "poll"] }
pixi_pty = { path = "crates/pixi_pty" }
signal-hook = { workspace = true }

[profile.dist]
codegen-units = 1
inherits = "release"
lto = "fat"
opt-level = 3
strip = "symbols"

[profile.ci]
codegen-units = 16
inherits = "release"
lto = false
opt-level = 3
strip = false


[dev-dependencies]
insta = { workspace = true, features = ["yaml", "glob"] }
rstest = { workspace = true }
serde_json = { workspace = true }
serial_test = { workspace = true }
tokio = { workspace = true, features = ["rt"] }

[patch.crates-io]
# For pyproject-toml
# pyproject-toml = { git = "https://github.com/tdejager/pyproject-toml-rs", branch = "feat/bump-508-440" }
# If you change this also change the versions in the the patch section for uv
pep440_rs = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
pep508_rs = { git = "https://github.com/astral-sh/uv", tag = "0.3.2" }
reqwest-middleware = { git = "https://github.com/astral-sh/reqwest-middleware", rev = "5e3eaf254b5bd481c75d2710eed055f95b756913" }
# deno_task_shell = { path = "../deno_task_shell" }
# rattler = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_conda_types = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_digest = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_lock = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_networking = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_repodata_gateway = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_shell = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_solve = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
# rattler_virtual_packages = { git = "https://github.com/tdejager/rattler", branch = "feat/default-marker-tree" }
#rattler_conda_types = { path = "../rattler/crates/rattler_conda_types" }
#rattler_digest = { path = "../rattler/crates/rattler_digest" }
#rattler_networking = { path = "../rattler/crates/rattler_networking" }
#rattler_repodata_gateway = { path = "../rattler/crates/rattler_repodata_gateway" }
#rattler_shell = { path = "../rattler/crates/rattler_shell" }
#rattler_solve = { path = "../rattler/crates/rattler_solve" }
#rattler_virtual_packages = { path = "../rattler/crates/rattler_virtual_packages" }
#rattler_lock = { path = "../rattler/crates/rattler_lock" }
#rattler_package_streaming = { path = "../rattler/crates/rattler_package_streaming" }
#rattler = { path = "../rattler/crates/rattler" }


# Change these lines if you want a patched version of uv
# [patch.'https://github.com/astral-sh/uv']
# pep440_rs = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# pep508_rs = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-build = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-cache = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-client = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-configuration = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-git = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-dispatch = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-distribution = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-installer = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-interpreter = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-normalize = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-resolver = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# uv-types = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# distribution-filename = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# distribution-types = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# install-wheel-rs = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# platform-tags = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# pypi-types = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
# requirements-txt = { git = "https://github.com/astral-sh/uv", rev = "65b17f6e81125064ea04c5cfef685516ab660cf5" }
