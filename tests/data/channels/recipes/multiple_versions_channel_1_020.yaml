recipe:
  name: multiple-versions-channel
  version: 1.0.0

context:
  version: 0.2.0
outputs:
  - package:
      name: package
      version: ${{ version }}

    build:
      script:
        - mkdir -p $PREFIX/bin
        # Expose two binaries, with and without version number
        - if: win
          then:
            - echo "package$PKG_VERSION on windows" > $PREFIX/bin/package$PKG_VERSION.bat
            - echo "package on windows" > $PREFIX/bin/package.bat
          else:
            - echo "package$PKG_VERSION on unix" > "$PREFIX/bin/package$PKG_VERSION"
            - chmod +x $PREFIX/bin/package$PKG_VERSION
            - echo "package on unix" > $PREFIX/bin/package
            - chmod +x $PREFIX/bin/package

  - package:
      name: package2
      version: ${{ version }}

    build:
      script:
        - mkdir -p $PREFIX/bin
        - if: win
          then:
            - echo "package2$PKG_VERSION on windows" > $PREFIX/bin/package2.bat
          else:
            - echo "package2$PKG_VERSION on unix" > $PREFIX/bin/package2
            - chmod +x $PREFIX/bin/package2

  - package:
      name: package3
      version: ${{ version }}

    build:
      number: 1
      string: abc
      script:
        - mkdir -p $PREFIX/bin
        - if: win
          then:
            - echo "package3$PKG_VERSION on windows" > $PREFIX/bin/package3.bat
          else:
            - echo "package3$PKG_VERSION on unix" > $PREFIX/bin/package3
            - chmod +x $PREFIX/bin/package3
