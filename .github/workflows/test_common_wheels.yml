name: "Test common wheel files for installation with pixi"

on:
  workflow_call:
    inputs:
      sha:
        type: string
        description: "The commit sha"
        required: true
      arch:
        type: string
        description: "The architecture of the file to test"
        required: true
      runs-on:
        type: string
        description: "The operating system to run the tests on"
        required: true

permissions: read-all

jobs:
  test_common_wheels:
    name: Test Installation of Common Wheels | ${{ inputs.arch }}
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: 15
    env:
      TARGET_RELEASE: "${{ github.workspace }}/target/release"
      LOGS_DIR: "${{ github.workspace }}/tests/wheel_tests/.logs"
      SUMMARY_FILE: "${{ github.workspace }}/tests/wheel_tests/.summary.md"
      PYTHONIOENCODING: utf-8
      PYTEST_ADDOPTS: "--color=yes"
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ inputs.sha }}
      - name: Create Dev Drive using ReFS
        if: ${{ contains(inputs.arch, 'windows') }}
        run: ${{ github.workspace }}/.github/workflows/setup-dev-drive.ps1
      - name: Copy Git Repo to Dev Drive
        if: ${{ contains(inputs.arch, 'windows') }}
        run: |
          Copy-Item -Path "${{ github.workspace }}" -Destination "${{ env.PIXI_WORKSPACE }}" -Recurse
      - name: Download binary from build
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6
        with:
          name: pixi-${{ inputs.arch }}-${{ inputs.sha }}
          path: ${{ env.TARGET_RELEASE }}
      - name: "Prepare binary"
        if: ${{ !contains(inputs.arch, 'windows') }}
        run: chmod +x ${{ env.TARGET_RELEASE }}/*
      - name: Test common wheels
        run: ${{ env.TARGET_RELEASE }}/pixi run --locked test-common-wheels-ci --pixi-exec ${{ env.TARGET_RELEASE }}/pixi
      - name: Write .summary.md to Github Summary
        if: ${{ !contains(inputs.arch, 'windows') && always() }}
        shell: bash
        run: |
          cat ${{ env.SUMMARY_FILE }} >> $GITHUB_STEP_SUMMARY
      - name: Write .summary.md to GitHub Summary (Windows)
        if: ${{ contains(inputs.arch, 'windows') && always() }}
        shell: pwsh
        run: |
          $resolvedPath = Resolve-Path $env:SUMMARY_FILE
          Get-Content $resolvedPath | Out-File -Append -FilePath $env:GITHUB_STEP_SUMMARY
      - name: Upload Logs
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
        if: ${{ always() }}
        with:
          name: wheel-tests-logs-${{ inputs.arch }}
          include-hidden-files: true
          path: ${{ env.LOGS_DIR }}
