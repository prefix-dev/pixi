{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://pixi.sh/v0.20.1/schema/manifest/schema.json",
  "title": "`pixi.toml` manifest file",
  "description": "The configuration for a [`pixi`](https://pixi.sh) project.",
  "type": "object",
  "required": [
    "project"
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "title": "Schema",
      "description": "The schema identifier for the project's configuration",
      "type": "string",
      "default": "https://pixi.sh/v0.20.1/schema/manifest/schema.json",
      "format": "uri-reference"
    },
    "activation": {
      "$ref": "#/$defs/Activation",
      "description": "The scripts used on the activation of the project"
    },
    "build-dependencies": {
      "title": "Build-Dependencies",
      "description": "The build `conda` dependencies, used in the build process",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "minLength": 1
          },
          {
            "$ref": "#/$defs/MatchspecTable"
          }
        ]
      }
    },
    "dependencies": {
      "title": "Dependencies",
      "description": "The `conda` dependencies, consisting of a package name and a requirement in [MatchSpec](https://github.com/conda/conda/blob/078e7ee79381060217e1ec7f9b0e9cf80ecc8f3f/conda/models/match_spec.py) format",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "minLength": 1
          },
          {
            "$ref": "#/$defs/MatchspecTable"
          }
        ]
      }
    },
    "environments": {
      "title": "Environments",
      "description": "The environments of the project, defined as a full object or a list of feature names.",
      "type": "object",
      "patternProperties": {
        "^[a-z\\d\\-]+$": {
          "anyOf": [
            {
              "$ref": "#/$defs/Environment"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            }
          ]
        }
      }
    },
    "feature": {
      "title": "Feature",
      "description": "The features of the project",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/Feature"
      }
    },
    "host-dependencies": {
      "title": "Host-Dependencies",
      "description": "The host `conda` dependencies, used in the build process",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "minLength": 1
          },
          {
            "$ref": "#/$defs/MatchspecTable"
          }
        ]
      },
      "examples": [
        {
          "python": ">=3.8"
        }
      ]
    },
    "project": {
      "$ref": "#/$defs/Project",
      "description": "The project's metadata information"
    },
    "pypi-dependencies": {
      "title": "Pypi-Dependencies",
      "description": "The PyPI dependencies",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "minLength": 1
          },
          {
            "$ref": "#/$defs/PyPIVersion"
          },
          {
            "$ref": "#/$defs/PyPIGitBranchRequirement"
          },
          {
            "$ref": "#/$defs/PyPIGitTagRequirement"
          },
          {
            "$ref": "#/$defs/PyPIGitRevRequirement"
          },
          {
            "$ref": "#/$defs/PyPIPathRequirement"
          },
          {
            "$ref": "#/$defs/PyPIUrlRequirement"
          }
        ]
      }
    },
    "pypi-options": {
      "$ref": "#/$defs/PyPIOptions",
      "description": "Options related to PyPI indexes"
    },
    "system-requirements": {
      "$ref": "#/$defs/SystemRequirements",
      "description": "The system requirements of the project"
    },
    "target": {
      "title": "Target",
      "description": "The targets of the project",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/Target"
      },
      "examples": [
        {
          "linux": {
            "dependencies": {
              "python": "3.8"
            }
          }
        }
      ]
    },
    "tasks": {
      "title": "Tasks",
      "description": "The tasks of the project",
      "type": "object",
      "patternProperties": {
        "^[^\\s\\$]+$": {
          "anyOf": [
            {
              "$ref": "#/$defs/TaskInlineTable"
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        }
      }
    },
    "tool": {
      "title": "Tool",
      "description": "Third-party tool configurations, ignored by pixi",
      "type": "object"
    }
  },
  "$defs": {
    "Activation": {
      "title": "Activation",
      "description": "A description of steps performed when an environment is activated",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "scripts": {
          "title": "Scripts",
          "description": "The scripts to run when the environment is activated",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "examples": [
            "activate.sh",
            "activate.bat"
          ]
        }
      }
    },
    "ChannelInlineTable": {
      "title": "ChannelInlineTable",
      "description": "A precise description of a `conda` channel, with an optional priority.",
      "type": "object",
      "required": [
        "channel"
      ],
      "additionalProperties": false,
      "properties": {
        "channel": {
          "title": "Channel",
          "description": "The channel the packages needs to be fetched from",
          "anyOf": [
            {
              "type": "string",
              "minLength": 1
            },
            {
              "type": "string",
              "format": "uri",
              "minLength": 1
            }
          ]
        },
        "priority": {
          "title": "Priority",
          "description": "The priority of the channel",
          "type": "integer"
        }
      }
    },
    "Environment": {
      "title": "Environment",
      "description": "A composition of the dependencies of features which can be activated to run tasks or provide a shell",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "features": {
          "title": "Features",
          "description": "The features that define the environment",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "no-default-feature": {
          "title": "No-Default-Feature",
          "description": "Whether to add the default feature to this environment",
          "type": "boolean",
          "default": false
        },
        "solve-group": {
          "title": "Solve-Group",
          "description": "The group name for environments that should be solved together",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Feature": {
      "title": "Feature",
      "description": "A composable aspect of the project which can contribute dependencies and tasks to an environment",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "activation": {
          "$ref": "#/$defs/Activation",
          "description": "The scripts used on the activation of environments using this feature"
        },
        "build-dependencies": {
          "title": "Build-Dependencies",
          "description": "The build `conda` dependencies, used in the build process",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/MatchspecTable"
              }
            ]
          }
        },
        "channels": {
          "title": "Channels",
          "description": "The `conda` channels that can be considered when solving environments containing this feature",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/ChannelInlineTable"
              }
            ]
          }
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "The `conda` dependencies, consisting of a package name and a requirement in [MatchSpec](https://github.com/conda/conda/blob/078e7ee79381060217e1ec7f9b0e9cf80ecc8f3f/conda/models/match_spec.py) format",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/MatchspecTable"
              }
            ]
          }
        },
        "host-dependencies": {
          "title": "Host-Dependencies",
          "description": "The host `conda` dependencies, used in the build process",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/MatchspecTable"
              }
            ]
          },
          "examples": [
            {
              "python": ">=3.8"
            }
          ]
        },
        "platforms": {
          "title": "Platforms",
          "description": "The platforms that the feature supports: a union of all features combined in one environment is used for the environment.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "pypi-dependencies": {
          "title": "Pypi-Dependencies",
          "description": "The PyPI dependencies of this feature",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/PyPIVersion"
              },
              {
                "$ref": "#/$defs/PyPIGitBranchRequirement"
              },
              {
                "$ref": "#/$defs/PyPIGitTagRequirement"
              },
              {
                "$ref": "#/$defs/PyPIGitRevRequirement"
              },
              {
                "$ref": "#/$defs/PyPIPathRequirement"
              },
              {
                "$ref": "#/$defs/PyPIUrlRequirement"
              }
            ]
          }
        },
        "pypi-options": {
          "$ref": "#/$defs/PyPIOptions",
          "description": "Options related to PyPI indexes for this feature"
        },
        "system-requirements": {
          "$ref": "#/$defs/SystemRequirements",
          "description": "The system requirements of this feature"
        },
        "target": {
          "title": "Target",
          "description": "Machine-specific aspects of this feature",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/Target"
          },
          "examples": [
            {
              "linux": {
                "dependencies": {
                  "python": "3.8"
                }
              }
            }
          ]
        },
        "tasks": {
          "title": "Tasks",
          "description": "The tasks provided by this feature",
          "type": "object",
          "patternProperties": {
            "^[^\\s\\$]+$": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TaskInlineTable"
                },
                {
                  "type": "string",
                  "minLength": 1
                }
              ]
            }
          }
        }
      }
    },
    "FindLinksPath": {
      "title": "FindLinksPath",
      "description": "The path to the directory containing packages",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "path": {
          "title": "Path",
          "description": "Path to the directory of packages",
          "type": "string",
          "minLength": 1,
          "examples": [
            "./links"
          ]
        }
      }
    },
    "FindLinksURL": {
      "title": "FindLinksURL",
      "description": "The URL to the html file containing href-links to packages",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "url": {
          "title": "Url",
          "description": "URL to html file with href-links to packages",
          "type": "string",
          "minLength": 1,
          "examples": [
            "https://simple-index-is-here.com"
          ]
        }
      }
    },
    "LibcFamily": {
      "title": "LibcFamily",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "family": {
          "title": "Family",
          "description": "The family of the `libc`",
          "type": "string",
          "minLength": 1,
          "examples": [
            "glibc",
            "musl"
          ]
        },
        "version": {
          "title": "Version",
          "description": "The version of `libc`",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        }
      }
    },
    "MatchspecTable": {
      "title": "MatchspecTable",
      "description": "A precise description of a `conda` package version.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "build": {
          "title": "Build",
          "description": "The build string of the package",
          "type": "string",
          "minLength": 1
        },
        "channel": {
          "title": "Channel",
          "description": "The channel the packages needs to be fetched from",
          "type": "string",
          "minLength": 1,
          "examples": [
            "conda-forge",
            "pytorch",
            "https://repo.prefix.dev/conda-forge"
          ]
        },
        "version": {
          "title": "Version",
          "description": "The version of the package in [MatchSpec](https://github.com/conda/conda/blob/078e7ee79381060217e1ec7f9b0e9cf80ecc8f3f/conda/models/match_spec.py) format",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Project": {
      "title": "Project",
      "description": "The project's metadata information.",
      "type": "object",
      "required": [
        "name",
        "platforms"
      ],
      "additionalProperties": false,
      "properties": {
        "authors": {
          "title": "Authors",
          "description": "The authors of the project",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "examples": [
            "John Doe <j.doe@prefix.dev>"
          ]
        },
        "channels": {
          "title": "Channels",
          "description": "The `conda` channels that can be used in the project. Unless overridden by `priority`, the first channel listed will be preferred.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/ChannelInlineTable"
              }
            ]
          }
        },
        "conda-pypi-map": {
          "title": "Conda-Pypi-Map",
          "description": "The `conda` to PyPI mapping configuration",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "format": "uri",
                "minLength": 1
              },
              {
                "type": "string",
                "minLength": 1
              }
            ]
          }
        },
        "description": {
          "title": "Description",
          "description": "A short description of the project",
          "type": "string",
          "minLength": 1
        },
        "documentation": {
          "title": "Documentation",
          "description": "The URL of the documentation of the project",
          "type": "string",
          "format": "uri",
          "minLength": 1
        },
        "homepage": {
          "title": "Homepage",
          "description": "The URL of the homepage of the project",
          "type": "string",
          "format": "uri",
          "minLength": 1
        },
        "license": {
          "title": "License",
          "description": "The license of the project; we advise using an [SPDX](https://spdx.org/licenses/) identifier.",
          "type": "string",
          "minLength": 1
        },
        "license-file": {
          "title": "License-File",
          "description": "The path to the license file of the project",
          "type": "string",
          "pattern": "^[^\\\\]+$"
        },
        "name": {
          "title": "Name",
          "description": "The name of the project; we advise use of the name of the repository",
          "type": "string",
          "minLength": 1
        },
        "platforms": {
          "title": "Platforms",
          "description": "The platforms that the project supports",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "const": "linux-32"
              },
              {
                "const": "linux-64"
              },
              {
                "const": "linux-aarch64"
              },
              {
                "const": "linux-armv6l"
              },
              {
                "const": "linux-armv7l"
              },
              {
                "const": "linux-ppc64le"
              },
              {
                "const": "linux-ppc64"
              },
              {
                "const": "linux-s390x"
              },
              {
                "const": "linux-riscv32"
              },
              {
                "const": "linux-riscv64"
              },
              {
                "const": "osx-64"
              },
              {
                "const": "osx-arm64"
              },
              {
                "const": "win-32"
              },
              {
                "const": "win-64"
              },
              {
                "const": "win-arm64"
              }
            ]
          }
        },
        "readme": {
          "title": "Readme",
          "description": "The path to the readme file of the project",
          "type": "string",
          "pattern": "^[^\\\\]+$"
        },
        "repository": {
          "title": "Repository",
          "description": "The URL of the repository of the project",
          "type": "string",
          "format": "uri",
          "minLength": 1
        },
        "version": {
          "title": "Version",
          "description": "The version of the project; we advise use of [SemVer](https://semver.org)",
          "type": "string",
          "minLength": 1,
          "examples": [
            "1.2.3"
          ]
        }
      }
    },
    "PyPIGitBranchRequirement": {
      "title": "PyPIGitBranchRequirement",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "branch": {
          "title": "Branch",
          "description": "A `git` branch to use",
          "type": "string",
          "minLength": 1
        },
        "extras": {
          "title": "Extras",
          "description": "The [PEP 508 extras](https://peps.python.org/pep-0508/#extras) of the package",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "git": {
          "title": "Git",
          "description": "The `git` URL to the repo e.g https://github.com/prefix-dev/pixi",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PyPIGitRevRequirement": {
      "title": "PyPIGitRevRequirement",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extras": {
          "title": "Extras",
          "description": "The [PEP 508 extras](https://peps.python.org/pep-0508/#extras) of the package",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "git": {
          "title": "Git",
          "description": "The `git` URL to the repo e.g https://github.com/prefix-dev/pixi",
          "type": "string",
          "minLength": 1
        },
        "rev": {
          "title": "Rev",
          "description": "A `git` SHA revision to sue",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PyPIGitTagRequirement": {
      "title": "PyPIGitTagRequirement",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extras": {
          "title": "Extras",
          "description": "The [PEP 508 extras](https://peps.python.org/pep-0508/#extras) of the package",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "git": {
          "title": "Git",
          "description": "The `git` URL to the repo e.g https://github.com/prefix-dev/pixi",
          "type": "string",
          "minLength": 1
        },
        "tag": {
          "title": "Tag",
          "description": "A `git` tag to use",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PyPIOptions": {
      "title": "PyPIOptions",
      "description": "Options related to PyPI indexes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extra-index-urls": {
          "title": "Extra-Index-Urls",
          "description": "Additional PyPI registries that should be used as extra indexes",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "examples": [
            [
              "https://pypi.org/simple"
            ]
          ]
        },
        "find-links": {
          "title": "Find-Links",
          "description": "Paths to directory containing",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/FindLinksPath"
              },
              {
                "$ref": "#/$defs/FindLinksURL"
              }
            ]
          },
          "examples": [
            [
              "https://pypi.org/simple"
            ]
          ]
        },
        "index-url": {
          "title": "Index-Url",
          "description": "Alternative PyPI registry that should be used as the main index",
          "type": "string",
          "minLength": 1,
          "examples": [
            "https://pypi.org/simple"
          ]
        }
      }
    },
    "PyPIPathRequirement": {
      "title": "PyPIPathRequirement",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "editable": {
          "title": "Editable",
          "description": "If `true` the package will be installed as editable",
          "type": "boolean"
        },
        "extras": {
          "title": "Extras",
          "description": "The [PEP 508 extras](https://peps.python.org/pep-0508/#extras) of the package",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "path": {
          "title": "Path",
          "description": "A path to a local source or wheel",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PyPIUrlRequirement": {
      "title": "PyPIUrlRequirement",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extras": {
          "title": "Extras",
          "description": "The [PEP 508 extras](https://peps.python.org/pep-0508/#extras) of the package",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "url": {
          "title": "Url",
          "description": "A URL to a remote source or wheel",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PyPIVersion": {
      "title": "PyPIVersion",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extras": {
          "title": "Extras",
          "description": "The [PEP 508 extras](https://peps.python.org/pep-0508/#extras) of the package",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "version": {
          "title": "Version",
          "description": "The version of the package in [PEP 440](https://www.python.org/dev/peps/pep-0440/) format",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SystemRequirements": {
      "title": "SystemRequirements",
      "description": "Platform-specific requirements",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "archspec": {
          "title": "Archspec",
          "description": "The architecture the project supports",
          "type": "string",
          "minLength": 1
        },
        "cuda": {
          "title": "Cuda",
          "description": "The minimum version of CUDA",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        },
        "libc": {
          "title": "Libc",
          "description": "The minimum version of `libc`",
          "anyOf": [
            {
              "$ref": "#/$defs/LibcFamily"
            },
            {
              "type": "number"
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        },
        "linux": {
          "title": "Linux",
          "description": "The minimum version of the Linux kernel",
          "anyOf": [
            {
              "type": "number",
              "exclusiveMinimum": 0.0
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        },
        "macos": {
          "title": "Macos",
          "description": "The minimum version of MacOS",
          "anyOf": [
            {
              "type": "number",
              "exclusiveMinimum": 0.0
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        },
        "unix": {
          "title": "Unix",
          "description": "Whether the project supports UNIX",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "minLength": 1
            }
          ],
          "examples": [
            "true"
          ]
        }
      }
    },
    "Target": {
      "title": "Target",
      "description": "A machine-specific configuration of dependencies and tasks",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "activation": {
          "$ref": "#/$defs/Activation",
          "description": "The scripts used on the activation of the project for this target"
        },
        "build-dependencies": {
          "title": "Build-Dependencies",
          "description": "The build `conda` dependencies, used in the build process",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/MatchspecTable"
              }
            ]
          }
        },
        "dependencies": {
          "title": "Dependencies",
          "description": "The `conda` dependencies, consisting of a package name and a requirement in [MatchSpec](https://github.com/conda/conda/blob/078e7ee79381060217e1ec7f9b0e9cf80ecc8f3f/conda/models/match_spec.py) format",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/MatchspecTable"
              }
            ]
          }
        },
        "host-dependencies": {
          "title": "Host-Dependencies",
          "description": "The host `conda` dependencies, used in the build process",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/MatchspecTable"
              }
            ]
          },
          "examples": [
            {
              "python": ">=3.8"
            }
          ]
        },
        "pypi-dependencies": {
          "title": "Pypi-Dependencies",
          "description": "The PyPI dependencies for this target",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "$ref": "#/$defs/PyPIVersion"
              },
              {
                "$ref": "#/$defs/PyPIGitBranchRequirement"
              },
              {
                "$ref": "#/$defs/PyPIGitTagRequirement"
              },
              {
                "$ref": "#/$defs/PyPIGitRevRequirement"
              },
              {
                "$ref": "#/$defs/PyPIPathRequirement"
              },
              {
                "$ref": "#/$defs/PyPIUrlRequirement"
              }
            ]
          }
        },
        "tasks": {
          "title": "Tasks",
          "description": "The tasks of the target",
          "type": "object",
          "patternProperties": {
            "^[^\\s\\$]+$": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TaskInlineTable"
                },
                {
                  "type": "string",
                  "minLength": 1
                }
              ]
            }
          }
        }
      }
    },
    "TaskInlineTable": {
      "title": "TaskInlineTable",
      "description": "A precise definition of a task.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cmd": {
          "title": "Cmd",
          "description": "A shell command to run the task in the limited, but cross-platform `bash`-like `deno_task_shell`. See the documentation for [supported syntax](https://pixi.sh/latest/features/advanced_tasks/#syntax)",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            {
              "type": "string",
              "minLength": 1
            }
          ]
        },
        "cwd": {
          "title": "Cwd",
          "description": "The working directory to run the task",
          "type": "string",
          "pattern": "^[^\\\\]+$"
        },
        "depends_on": {
          "title": "Depends On",
          "description": "The tasks that this task depends on. Environment variables will **not** be expanded.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "A valid task name.",
                "type": "string",
                "pattern": "^[^\\s\\$]+$"
              }
            },
            {
              "description": "A valid task name.",
              "type": "string",
              "pattern": "^[^\\s\\$]+$"
            }
          ]
        },
        "env": {
          "title": "Env",
          "description": "A map of environment variables to values, used in the task, these will be overwritten by the shell.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "minLength": 1
          },
          "examples": [
            {
              "key": "value"
            },
            {
              "ARGUMENT": "value"
            }
          ]
        },
        "inputs": {
          "title": "Inputs",
          "description": "A list of `.gitignore`-style glob patterns that should be watched for changes before this command is run. Environment variables _will_ be expanded.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "outputs": {
          "title": "Outputs",
          "description": "A list of `.gitignore`-style glob patterns that are generated by this command. Environment variables _will_ be expanded.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    }
  }
}
