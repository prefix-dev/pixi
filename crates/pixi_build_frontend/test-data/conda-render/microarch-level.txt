--------------
Hash contents:
--------------
{'__unix': '__unix',
 'channel_targets': 'conda-forge main',
 'family': 'ppc64le',
 'level': '8'}
----------
meta.yaml:
----------
package:
  name: ppc64le-microarch-level
  version: '8'
build:
  noarch: generic
  number: 2
  run_exports:
    strong:
      - _ppc64le-microarch-level >=8
  string: '2'
requirements:
  build: []
  run:
    - __unix
about:
  description: 'Use the meta-package ppc64le-microarch-level in requirements/build
    in conda

    recipes to set up the compiler flags and set up the virtual package

    requirements in the run requirements.


    When building packages on CI, level=4 will not be guaranteed, so

    you can only use level<=3 to build.


    The run_exports only has a lower bound and therefore a level=2

    build can be installed on a level=3 user system. A tighter bound

    is not added because we want to be able to test both level=2 and

    level=3 on a CI machine with level=3.

    Therefore in order to prioritise the highest level, use the build

    number to prioritise the level.


    Only supported on Linux and macOS.

    '
  home: https://github.com/conda-forge/microarch-level-feedstock
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: Meta package to build conda recipes with microarchitecture levels
extra:
  copy_test_source_files: true
  feedstock-name: microarch-level
  final: true
  parent_recipe:
    name: microarch-level-split
    path: F:\projects\microarch-level-feedstock\recipe
    version: '8'
  recipe-maintainers:
    - isuruf

--------------
Hash contents:
--------------
{'__archspec': '__archspec 1=x86_64',
 'channel_targets': 'conda-forge main',
 'family': 'x86_64',
 'microarchitecture': 'x86_64'}
----------
meta.yaml:
----------
package:
  name: _x86_64-microarch-level
  version: '1'
build:
  noarch: generic
  number: 2
  string: 2_x86_64
requirements:
  build: []
  run:
    - __archspec 1=x86_64
about:
  description: 'The meta-package _x86_64-microarch-level enforces the microarchitecture
    in the

    user system.


    Note that a user would need the archspec conda package installed

    in the base environment where conda/mamba is run from.


    See x86_64-microarch-level for using this in conda recipes

    '
  home: https://github.com/conda-forge/microarch-level-feedstock
  license: BSD-3-Clause
  license_file: LICENSE.txt
  summary: Meta package to build conda recipes with microarchitecture levels
extra:
  copy_test_source_files: true
  feedstock-name: microarch-level
  final: true
  parent_recipe:
    name: microarch-level-split
    path: F:\projects\microarch-level-feedstock\recipe
    version: '1'
  recipe-maintainers:
    - isuruf
