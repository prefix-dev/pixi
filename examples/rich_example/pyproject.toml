[project]
authors = [{ name = "Julian Hofer", email = "julianhofer@gnome.org" }]
dependencies = ["rich"]
description = "A simple package showcasing a rich terminal interface and pixi-build-python"
name = "rich_example"
requires-python = ">= 3.11"
version = "0.1.0"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]
preview = ["pixi-build"]

[tool.pixi.host-dependencies]
# To be able to install this pyproject we need to install the dependencies of
# the python build-system defined above. Note that different from the
# pyproject build-system this refers to a conda package instead of a pypi
# package.
hatchling = "==1.26.3"
# This way uv is used instead of pip
uv = "*"


[project.scripts]
rich_example = "rich_example:main"

# The build-system section defines the build system that will be used to turn
# the source code of this package into a conda package. Similarly to the above
# [build-system] section this section instructs pixi which build backend to
# use. The build-backend is an executable that is installed and invoked by
# pixi with the sole purpose to build the package.
[tool.pixi.build-system]
# The name of the build backend to use. This name refers both to the name of
# the package that provides the build backend and the name of the executable
# inside the package that is invoked.
#
# The `build-backend` key also functions as a dependency declaration. At least
# a version specifier must be added.
build-backend = { name = "pixi-build-python", version = "*" }
# These are the conda channels that are used to resolve the dependencies of the
# build backend package.
channels = [
  "https://prefix.dev/pixi-build-backends",
  "https://prefix.dev/conda-forge",
]


[tool.pixi.tasks]
test = "rich_example"

[tool.pixi.dependencies]
rich = ">=13.9.4,<14"
rich_example = { path = "." }

# This section marks the project as a pixi package.
#
# Normally a number of fields would be set here, like the name, version, etc.
# However, since all these fields are already defined in the [project] section
# at the top of this file they are not required.
[tool.pixi.package]
